// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
var Verifier = artifacts.require('Verifier');
var Proof = require('../../zokrates/code/square/proof3.json');

// Test verification with correct proof
// - use the contents from proof.json generated from zokrates steps

    
// Test verification with incorrect proof


contract('Test verification with correct proof', accounts => {

    const account_one = accounts[0];
    const account_two = accounts[1];
   

    describe('', function () {
        beforeEach(async function () { 
            this.contract = await Verifier.new({from: account_one});
           
        })

        it('Verified with correct proof', async function () { 
            let result = false;

            try{
                result = await this.contract.verifyTx.call(Proof.proof["a"], Proof.proof["b"], Proof.proof["c"], Proof.inputs);
             }catch(e){
                console.log(e);
            }

            assert.equal(result, true, "Does not verify correct proof");
        })

        it('Verification fails  with incorrect input', async function () { 
            let result = false;
  			let incorrectInputs = ["0x0000000000000000000000000000000000000000000000000000000000000008", "0x0000000000000000000000000000000000000000000000000000000000000001"]
      
            try{
                result = await this.contract.verifyTx.call(Proof.proof["a"], Proof.proof["b"], Proof.proof["c"], incorrectInputs);
             }catch(e){
                console.log(e);
            }

            assert.equal(result, false, "Verification should not pass with incorrect input");
        })



	})
})
